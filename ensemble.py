# -*- coding: utf-8 -*-
"""ensemble.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iSWCovGPI6DU54GZ7Vrhie8RoJLzAS9I
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
from scipy.stats import mode
import pandas as pd
import re

def process_text(text): # テキストの前処理
    text = text.lower()
    num_word_to_digit = {
        'zero': '0', 'one': '1', 'two': '2', 'three': '3', 'four': '4',
        'five': '5', 'six': '6', 'seven': '7', 'eight': '8', 'nine': '9',
        'ten': '10'
    }
    for word, digit in num_word_to_digit.items():
        text = text.replace(word, digit)
    text = re.sub(r'(?<!\d)\.(?!\d)', '', text)
    text = re.sub(r'\b(a|an|the)\b', '', text)
    contractions = {
        "dont": "don't", "isnt": "isn't", "arent": "aren't", "wont": "won't",
        "cant": "can't", "wouldnt": "wouldn't", "couldnt": "couldn't"
    }
    for contraction, correct in contractions.items():
        text = text.replace(contraction, correct)
    text = re.sub(r"[^\w\s':]", ' ', text)
    text = re.sub(r'\s+,', ',', text)
    text = re.sub(r'\s+', ' ', text).strip()

    return text

def convert_array(array, conversion_dict):
    # ndarrayの形状を保持
    shape = array.shape
    # 平坦化したndarrayを辞書を使って変換
    flat_array = array.flatten()
    converted_flat_array = np.array([conversion_dict[item] for item in flat_array])
    # 変換された平坦な配列を元の形状に戻す
    converted_array = converted_flat_array.reshape(shape)
    return converted_array

# 目的関数の辞書作成
answer2idx = {}
idx2answer = {}

df_trainval = pd.read_json("drive/MyDrive/Colab Notebooks/DLBasics2024_colab/final/data/train.json")

# answer2idxの作成
for answers in df_trainval["answers"]:
    for answer in answers:
        word = process_text(answer["answer"])
        if word not in answer2idx:
            answer2idx[word] = len(answer2idx)

# idx2answerの作成
idx2answer = {v: k for k, v in answer2idx.items()}

prob1 = np.load("drive/MyDrive/Colab Notebooks/DLBasics2024_colab/final/ensemble/prob_submission_20epochs_3.npy")
prob2 = np.load("drive/MyDrive/Colab Notebooks/DLBasics2024_colab/final/ensemble/prob_submission_16epochs_3.npy")
prob3 = np.load("drive/MyDrive/Colab Notebooks/DLBasics2024_colab/final/ensemble/prob_submission_10epochs_4.npy")

sum = prob1 + prob2 + prob3*2.5
sum = sum.reshape(4969, 40244)
sum[:, 3] += 2.4
converted_array = convert_array(sum.argmax(1), idx2answer)

df = pd.Series(converted_array)
df.value_counts()

np.save("drive/MyDrive/Colab Notebooks/DLBasics2024_colab/final/ensemble/ensemble.npy", converted_array) # 最終提出